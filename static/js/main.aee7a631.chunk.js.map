{"version":3,"sources":["graphql/get-starships.js","context/cart/cartContext.js","components/styles/Button.js","components/AddToCartForm.js","components/Starship.js","containers/StarshipsContainer.js","components/styles/GlobalStyles.js","components/Header.js","context/cart/index.js","App.js","index.js"],"names":["GET_STARSHIPS","gql","cartContext","createContext","Button","styled","button","StyledForm","form","StyledLabel","label","StyledInput","input","AddToCartForm","starship","costInCredits","addToCart","useContext","CartContext","inputRef","useRef","onSubmit","event","preventDefault","amount","current","value","htmlFor","ref","id","type","min","max","StyledStarship","li","PriceWrap","div","OutOfStock","p","StarshipCardHeader","StarshipCardBody","Name","Manufacturers","AmountInfo","Starship","cartItems","removeFromCart","name","manufacturers","cartStarship","find","el","map","manufacturer","index","key","onClick","StyledContainer","ul","StarshipsContainer","useQuery","data","allStarships","starships","GlobalStyles","createGlobalStyle","StyledHeader","header","HeaderWrap","CartIconWrap","Header","cartAmount","CartProvider","children","useState","setCartItems","setCartAmount","useEffect","newCartAmount","reduce","total","item","Provider","newCart","increaseItemAmount","filter","App","client","ApolloClient","uri","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"udAEO,IAAMA,E,MAAgBC,GAAH,K,QCEXC,EAFKC,0BCAPC,EAASC,IAAOC,OAAV,yDAAGD,CAAH,sMCGbE,EAAaF,IAAOG,KAAV,gFAAGH,CAAH,kCAKVI,EAAcJ,IAAOK,MAAV,iFAAGL,CAAH,uCAKXM,EAAcN,IAAOO,MAAV,iFAAGP,CAAH,4NAgDFQ,MAhCf,YAA2C,IAAD,IAAjBC,gBAAiB,MAAN,GAAM,EAChCC,EAAkBD,EAAlBC,cAEAC,EAAcC,qBAAWC,GAAzBF,UAEFG,EAAWC,iBAAO,MAQxB,OACE,kBAACb,EAAD,CAAYc,SAPgB,SAACC,GAC7BA,EAAMC,iBACN,IAAMC,GAAUL,EAASM,QAAQC,MAC7BF,EAAS,GAAGR,EAAUF,EAAUU,KAKjCT,GACC,oCACE,kBAACN,EAAD,CAAakB,QAAQ,UAArB,WACA,kBAAChB,EAAD,CACEiB,IAAKT,EACLU,GAAG,SACHC,KAAK,SACLC,IAAI,IACJC,IAAI,OAEN,kBAAC5B,EAAD,CAAQ0B,KAAK,UAAb,kBClDJG,EAAiB5B,IAAO6B,GAAV,2EAAG7B,CAAH,kDAMd8B,EAAY9B,IAAO+B,IAAV,sEAAG/B,CAAH,6DAQTgC,EAAahC,IAAOiC,EAAV,uEAAGjC,CAAH,+FAOVkC,EAAqBlC,IAAO+B,IAAV,+EAAG/B,CAAH,mGAOlBmC,EAAmBnC,IAAO+B,IAAV,6EAAG/B,CAAH,mBAIhBoC,EAAOpC,IAAOiC,EAAV,iEAAGjC,CAAH,mFAOJqC,EAAgBrC,IAAO+B,IAAV,0EAAG/B,CAAH,kMAoBbsC,EAAatC,IAAO+B,IAAV,uEAAG/B,CAAH,2TAwEDuC,MA5Cf,YAAsC,IAAD,IAAjB9B,gBAAiB,MAAN,GAAM,IACGG,qBAAWC,GAAzC2B,EAD2B,EAC3BA,UAAWC,EADgB,EAChBA,eAEXC,EAA2CjC,EAA3CiC,KAAMC,EAAqClC,EAArCkC,cAAejC,EAAsBD,EAAtBC,cAAec,EAAOf,EAAPe,GAEtCoB,EAAeJ,EAAUK,MAAK,SAACC,GAAD,OAAQA,EAAGtB,KAAOA,KAEtD,OACE,kBAACI,EAAD,KACE,kBAACM,EAAD,KACE,kBAACE,EAAD,KAAOM,IAET,kBAACP,EAAD,KACE,kBAACE,EAAD,KACE,4CACA,4BACGM,EAAcI,KAAI,SAACC,EAAcC,GAAf,OACjB,wBAAIC,IAAKD,GAAQD,QAIvB,kBAAClB,EAAD,KACGpB,EACC,2BAAIA,EAAJ,YAEA,kBAACsB,EAAD,sBAGJ,kBAAC,EAAD,CAAevB,SAAUA,IACzB,kBAAC6B,EAAD,KACGM,GACC,oCACE,sCAAYA,EAAazB,OAAzB,YACA,4BAAQgC,QAAS,kBAAMV,EAAejB,KACpC,wCADF,IACsB,kBAAC,IAAD,YCzH9B4B,EAAkBpD,IAAOqD,GAAV,sFAAGrD,CAAH,4PAiCNsD,MAdf,WAA+B,IAAD,EACqCC,YAC/D5D,GADM6D,KADoB,gBAC8B,GAD9B,GACZC,aADY,gBACuB,GADvB,GACIC,iBADJ,MACgB,GADhB,EAK5B,OACE,kBAACN,EAAD,KACGM,EAAUX,KAAI,SAACtC,GAAD,OACb,kBAAC,EAAD,CAAUA,SAAUA,EAAUyC,IAAKzC,EAASe,U,+5BC/BpD,IAmDemC,EAnDMC,YAAH,KCGZC,EAAe7D,IAAO8D,OAAV,2EAAG9D,CAAH,yGASZ+D,EAAa/D,IAAO+B,IAAV,yEAAG/B,CAAH,yKAcVgE,EAAehE,IAAO+B,IAAV,2EAAG/B,CAAH,kZ,sHAsDHiE,MAnBf,WAAmB,IACTC,EAAetD,qBAAWC,GAA1BqD,WAER,OACE,kBAACL,EAAD,KACE,kBAACE,EAAD,KACE,+CACA,kBAACC,EAAD,KACE,mCACA,yBACE,kBAAC,IAAD,MACA,8BAAOE,Q,wBCrBJC,EAlDM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBAC9B7B,EAD8B,KACnB8B,EADmB,OAEDD,mBAAS,GAFR,mBAE9BH,EAF8B,KAElBK,EAFkB,KAIrCC,qBAAU,WACR,IAAMC,EAAgBjC,EAAUkC,QAC9B,SAACC,EAAOC,GAAR,OAAkBD,EAASC,EAAKzD,SAChC,GAEFoD,EAAcE,KACb,CAACP,EAAY1B,IA0BhB,OACE,kBAAC,EAAYqC,SAAb,CACExD,MAAO,CACLV,UAjBY,SAACiE,EAAMzD,GACNqB,EAAUK,MAAK,SAACC,GAAD,OAAQA,EAAGtB,KAAOoD,EAAKpD,MAX9B,SAACA,EAAIL,GAC9B,IAAM2D,EAAUtC,EAAUO,KAAI,SAAC6B,GAC7B,OAAOA,EAAKpD,KAAOA,EAAZ,2BACEoD,GADF,IACQzD,OAAQyD,EAAKzD,OAASA,IAD9B,eAEEyD,MAGXN,EAAaQ,GAOTC,CAAmBH,EAAKpD,GAAIL,GAC5BmD,EAAa,GAAD,mBAAK9B,GAAL,aAAC,eAAoBoC,GAArB,IAA2BzD,OAAQA,QAa/CsB,eAViB,SAACjB,GACtB,IAAMsD,EAAUtC,EAAUwC,QAAO,SAACJ,GAAD,OAAUA,EAAKpD,KAAOA,KAEvD8C,EAAaQ,IAQTZ,aACA1B,cAGD4B,ICtBQa,MAlBf,WACE,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,6BAGP,OACE,kBAAC,IAAD,CAAgBF,OAAQA,GACtB,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,UCfVG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.aee7a631.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const GET_STARSHIPS = gql`\r\n  query starships {\r\n    allStarships {\r\n      starships {\r\n        id\r\n        name\r\n        manufacturers\r\n        costInCredits\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from 'react';\r\n\r\nconst cartContext = createContext();\r\n\r\nexport default cartContext;\r\n","import styled from 'styled-components/macro';\r\n\r\nexport const Button = styled.button`\r\n  background: var(--orangeLight);\r\n  border: none;\r\n  max-width: 10rem;\r\n  width: 100%;\r\n  color: var(--white);\r\n  font-weight: 600;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n\r\n  &:hover {\r\n    background: var(--orange);\r\n  }\r\n`;\r\n","import React, { useContext, useRef } from 'react';\r\nimport { Button } from './styles/Button';\r\nimport styled from 'styled-components/macro';\r\nimport CartContext from '../context/cart/cartContext';\r\n\r\nconst StyledForm = styled.form`\r\n  height: 40px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  border-bottom: 2px solid var(--orangeLight);\r\n  max-width: 10rem;\r\n  margin: 0 5px;\r\n  padding: 2px 5px;\r\n  transition: border 0.2s;\r\n  font-weight: 600;\r\n  font-size: 2rem;\r\n\r\n  &:focus {\r\n    border-bottom: 2px solid var(--orange);\r\n  }\r\n`;\r\n\r\nfunction AddToCartForm({ starship = {} }) {\r\n  const { costInCredits } = starship;\r\n\r\n  const { addToCart } = useContext(CartContext);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleAddToCartSubmit = (event) => {\r\n    event.preventDefault();\r\n    const amount = +inputRef.current.value;\r\n    if (amount > 0) addToCart(starship, amount);\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={handleAddToCartSubmit}>\r\n      {costInCredits && (\r\n        <>\r\n          <StyledLabel htmlFor='amount'>amount:</StyledLabel>\r\n          <StyledInput\r\n            ref={inputRef}\r\n            id='amount'\r\n            type='number'\r\n            min='1'\r\n            max='10'\r\n          />\r\n          <Button type='submit'>Add to cart</Button>\r\n        </>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n}\r\n\r\nexport default AddToCartForm;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport CartContext from '../context/cart/cartContext';\r\nimport AddToCartForm from './AddToCartForm';\r\n\r\nconst StyledStarship = styled.li`\r\n  border-radius: 5px;\r\n  box-shadow: var(--shadow);\r\n  }\r\n`;\r\n\r\nconst PriceWrap = styled.div`\r\n  margin-bottom: 1rem;\r\n  p {\r\n    font-size: 2.2rem;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst OutOfStock = styled.p`\r\n  background: var(--greyDark);\r\n  color: var(--white);\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nconst StarshipCardHeader = styled.div`\r\n  background: var(--purple);\r\n  border-top-right-radius: 5px;\r\n  border-top-left-radius: 5px;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst StarshipCardBody = styled.div`\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  color: var(--white);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Manufacturers = styled.div`\r\n  p {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  ul {\r\n    margin-bottom: 1rem;\r\n    height: 9rem;\r\n    overflow: hidden;\r\n  }\r\n\r\n  li {\r\n    font-size: 1.4rem;\r\n    border-bottom: 1px solid var(--greyLight);\r\n    padding: 5px 0;\r\n  }\r\n`;\r\n\r\nconst AmountInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 2rem;\r\n  overflow: hidden;\r\n\r\n  p {\r\n    font-size: 1.4rem;\r\n    color: var(--orange);\r\n  }\r\n\r\n  button {\r\n    border: none;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    text-transform: uppercase;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: var(--orange);\r\n\r\n    span {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Starship({ starship = {} }) {\r\n  const { cartItems, removeFromCart } = useContext(CartContext);\r\n\r\n  const { name, manufacturers, costInCredits, id } = starship;\r\n\r\n  const cartStarship = cartItems.find((el) => el.id === id);\r\n\r\n  return (\r\n    <StyledStarship>\r\n      <StarshipCardHeader>\r\n        <Name>{name}</Name>\r\n      </StarshipCardHeader>\r\n      <StarshipCardBody>\r\n        <Manufacturers>\r\n          <p>Manufacturers</p>\r\n          <ul>\r\n            {manufacturers.map((manufacturer, index) => (\r\n              <li key={index}>{manufacturer}</li>\r\n            ))}\r\n          </ul>\r\n        </Manufacturers>\r\n        <PriceWrap>\r\n          {costInCredits ? (\r\n            <p>{costInCredits} credits</p>\r\n          ) : (\r\n            <OutOfStock>out of stock</OutOfStock>\r\n          )}\r\n        </PriceWrap>\r\n        <AddToCartForm starship={starship} />\r\n        <AmountInfo>\r\n          {cartStarship && (\r\n            <>\r\n              <p>Already {cartStarship.amount} in cart</p>\r\n              <button onClick={() => removeFromCart(id)}>\r\n                <span>remove</span> <FaTrashAlt />\r\n              </button>\r\n            </>\r\n          )}\r\n        </AmountInfo>\r\n      </StarshipCardBody>\r\n    </StyledStarship>\r\n  );\r\n}\r\n\r\nexport default Starship;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_STARSHIPS } from '../graphql/get-starships';\r\nimport Starship from '../components/Starship';\r\nimport styled from 'styled-components/macro';\r\n\r\nconst StyledContainer = styled.ul`\r\n  padding: 1rem;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n\r\n  @media (min-width: 700px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (min-width: 1100px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 2rem;\r\n  }\r\n`;\r\n\r\nfunction StarshipsContainer() {\r\n  const { data: { allStarships: { starships = [] } = {} } = {} } = useQuery(\r\n    GET_STARSHIPS\r\n  );\r\n\r\n  return (\r\n    <StyledContainer>\r\n      {starships.map((starship) => (\r\n        <Starship starship={starship} key={starship.id} />\r\n      ))}\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default StarshipsContainer;\r\n","import { createGlobalStyle } from 'styled-components/macro';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n  :root {\r\n    --maxWidth: 1200px;\r\n    --white: #fff;\r\n    --greyLight: #d3d3d3;\r\n    --greyDark: #808080;\r\n    --orange: #ea5d1f;\r\n    --orangeLight: #f08a5d;\r\n    --purple: #6a2c70;\r\n    --purpleLight: #983fa1;\r\n    --textDark: #190b1b;\r\n    --shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14),\r\n    0 1px 18px 0 rgba(0, 0, 0, 0.12),\r\n    0 3px 5px -1px rgba(0, 0, 0, 0.20);\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 10px;\r\n  }\r\n\r\n  body {\r\n    min-height: 100vh;\r\n    line-height: 1.5;\r\n    font-family: 'Montserrat',sans-serif;\r\n    color: var(--textDark);\r\n  }\r\n\r\n  *, *:before, *:after {\r\n    box-sizing: inherit;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6, p, ol, ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: normal;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { FaShoppingCart } from 'react-icons/fa';\r\nimport CartContext from '../context/cart/cartContext';\r\n\r\nconst StyledHeader = styled.header`\r\n  background: var(--purpleLight);\r\n  position: sticky;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 10;\r\n  box-shadow: var(--shadow);\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    text-transform: uppercase;\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nconst CartIconWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 1rem;\r\n\r\n  p {\r\n    font-size: 1.8rem;\r\n    color: var(--white);\r\n    margin-right: 5px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  svg {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    color: var(--white);\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    font-size: 1.3rem;\r\n    top: -5px;\r\n    right: -15px;\r\n    background: var(--orangeLight);\r\n    color: var(--white);\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  const { cartAmount } = useContext(CartContext);\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <HeaderWrap>\r\n        <h1>starships store</h1>\r\n        <CartIconWrap>\r\n          <p>cart</p>\r\n          <div css='position: relative'>\r\n            <FaShoppingCart />\r\n            <span>{cartAmount}</span>\r\n          </div>\r\n        </CartIconWrap>\r\n      </HeaderWrap>\r\n    </StyledHeader>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CartContext from './cartContext';\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartAmount, setCartAmount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const newCartAmount = cartItems.reduce(\r\n      (total, item) => (total += item.amount),\r\n      0\r\n    );\r\n    setCartAmount(newCartAmount);\r\n  }, [cartAmount, cartItems]);\r\n\r\n  const increaseItemAmount = (id, amount) => {\r\n    const newCart = cartItems.map((item) => {\r\n      return item.id === id\r\n        ? { ...item, amount: item.amount + amount }\r\n        : { ...item };\r\n    });\r\n\r\n    setCartItems(newCart);\r\n  };\r\n\r\n  const addToCart = (item, amount) => {\r\n    const cartItem = cartItems.find((el) => el.id === item.id);\r\n\r\n    cartItem\r\n      ? increaseItemAmount(item.id, amount)\r\n      : setCartItems([...cartItems, { ...item, amount: amount }]);\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    const newCart = cartItems.filter((item) => item.id !== id);\r\n\r\n    setCartItems(newCart);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        addToCart,\r\n        removeFromCart,\r\n        cartAmount,\r\n        cartItems,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport StarshipsContainer from './containers/StarshipsContainer';\nimport GlobalStyles from './components/styles/GlobalStyles';\nimport Header from './components/Header';\nimport CartProvider from './context/cart';\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://swapi.apis.guru/',\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <CartProvider>\n        <GlobalStyles />\n        <Header />\n        <main>\n          <StarshipsContainer />\n        </main>\n      </CartProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}